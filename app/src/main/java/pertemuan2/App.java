/*
 * This source file was generated by the Gradle 'init' task
 */
package pertemuan2;

import java.sql.PreparedStatement;
import java.util.List;
import java.util.Scanner;

import pertemuan2.models.Mahasiswa;
import pertemuan2.repository.MahasiswaRepository;

import pertemuan2.models.Jurusan;
import pertemuan2.repository.JurusanRepository;

import pertemuan2.models.Matakuliah;
import pertemuan2.repository.MatakuliahRepository;

public class App {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int menu = 0;

        while (menu != 4) {
            System.out.println("Menu: ");
            System.out.println("1. Mahasiswa");
            System.out.println("2. Jurusan");
            System.out.println("3. Matakuliah");
            System.out.println("4. Exit");
            System.out.print("Input menu: ");
            menu = sc.nextInt();

            switch (menu) {
                case 1:
                    int menuMhs = 0;
                    while (menuMhs != 7) {
                        System.out.println("Menu Mahasiswa: ");
                        System.out.println("1. Add Mahasiswa");
                        System.out.println("2. Find Mahasiswa");
                        System.out.println("3. Delete Mahasiswa");
                        System.out.println("4. Print data Mahasiswa");
                        System.out.println("5. Input Nilai");
                        System.out.println("6. IPK");
                        System.out.println("7. Out");
                        System.out.print("Input menu: ");
                        menuMhs = sc.nextInt();

                        switch (menuMhs) {
                            case 1:
                                sc.nextLine();
                                System.out.print("Masukkan NIM: ");
                                String nim = sc.nextLine();
                                System.out.print("Masukkan Nama: ");
                                String nama = sc.nextLine();
                                System.out.print("Masukan kode jurusan: ");
                                String kodeJurusan = sc.nextLine();

                                Mahasiswa mhs = new Mahasiswa(nim, nama,JurusanRepository.getJurusanByKode(kodeJurusan));
                                MahasiswaRepository.addMahasiswa(mhs);
                                break;
                            case 2:
                                sc.nextLine();
                                System.out.print("Masukkan NIM: ");
                                nim = sc.nextLine();
                                System.out.println("Nim: " + MahasiswaRepository.getMahasiswaByNim(nim).nim + "\nNama: " + MahasiswaRepository.getMahasiswaByNim(nim).nama); 
                                break;
                            case 3:
                                sc.nextLine();
                                System.out.print("Masukkan NIM: ");
                                nim = sc.nextLine();
                                MahasiswaRepository.deleteMahasiswa(nim);
                                break;
                            case 4:
                                List<Mahasiswa> allMahasiswa = MahasiswaRepository.getAllMahasiswa();
                                System.out.println("Daftar Mahasiswa: ");
                                for (Mahasiswa m : allMahasiswa) {
                                    System.out.println(m.nim + " - " + m.nama);
                                }
                                break;
                            case 5:
                            sc.nextLine();
                                System.out.print("Input NIM: ");
                                String nimMhs = sc.nextLine();
                                System.out.print("Input kode Matakuliah: ");
                                String kodeMk = sc.nextLine();
                                System.out.print("Input Nilai: ");
                                String nilai = sc.nextLine();
                                MahasiswaRepository.inputNilai(nimMhs, kodeMk, nilai);
                                break;
                            case 6:
                            sc.nextLine();
                                System.out.print("Masukkan NIM: ");
                                nimMhs = sc.nextLine();
                                System.out.println("IPK: " + MahasiswaRepository.hitungIP(nimMhs));
                                break;
                            default:
                                break;
                        }
                    }

                    break;
                case 2:
                    int menuJurusan = 0;
                    while (menuJurusan != 5) {
                        System.out.println("Menu Jurusan: ");
                        System.out.println("1. Add Jurusan");
                        System.out.println("2. Find Jurusan");
                        System.out.println("3. Delete Jurusan");
                        System.out.println("4. Print data Jurusan");
                        System.out.println("5. Out");
                        System.out.print("Input menu: ");
                        menuJurusan = sc.nextInt();

                        switch (menuJurusan) {
                            case 1:
                                sc.nextLine();
                                System.out.print("Masukkan Kode: ");
                                String kode = sc.nextLine();
                                System.out.print("Masukkan Nama: ");
                                String nama = sc.nextLine();

                                Jurusan jurusan = new Jurusan(kode, nama);
                                JurusanRepository.addJurusan(jurusan);
                                break;
                            case 2:
                                sc.nextLine();
                                System.out.print("Masukkan kode: ");
                                kode = sc.nextLine();
                                System.out.println("Kode: " + JurusanRepository.getJurusanByKode(kode).kode + "\nNama: " + JurusanRepository.getJurusanByKode(kode).nama);
                                break;
                            case 3:
                                sc.nextLine();
                                System.out.print("Masukkan kode: ");
                                kode = sc.nextLine();
                                JurusanRepository.deleteJurusan(kode);
                                break;
                            case 4:
                                List<Jurusan> allJurusan = JurusanRepository.getAllJurusan();
                                System.out.println("Daftar Jurusan: ");
                                for (Jurusan jur : allJurusan) {
                                    System.out.println(jur.kode + " - " + jur.nama);
                                }
                                break;
                            default:
                                break;
                        }
                    }
                    break;
                case 3:

                    int menuMatkul = 0;
                    while (menuMatkul != 6) {
                        System.out.println("Menu Matakuliah: ");
                        System.out.println("1. Add Matakuliah");
                        System.out.println("2. Find Matakuliah");
                        System.out.println("3. Delete Matakuliah");
                        System.out.println("4. Masukkin matakuliah ke jurusan");
                        System.out.println("5. Print data Matakuliah");
                        System.out.println("6. Out");
                        System.out.print("Input menu: ");
                        menuMatkul = sc.nextInt();

                        switch (menuMatkul) {
                            case 1:
                                sc.nextLine();
                                System.out.print("Masukkan Kode: ");
                                String kode = sc.nextLine();
                                System.out.print("Masukkan Nama: ");
                                String nama = sc.nextLine();
                                System.out.print("Masukkan SKS: ");
                                int sks = sc.nextInt();

                                Matakuliah matkul = new Matakuliah(kode, nama, sks);
                                MatakuliahRepository.addMatakuliah(matkul);
                                break;
                            case 2:
                                sc.nextLine();
                                System.out.print("Masukkan kode: ");
                                kode = sc.nextLine();
                                System.out.println("Kode: " + MatakuliahRepository.getMatakuliahByKode(kode).kode + "\nNama: " + MatakuliahRepository.getMatakuliahByKode(kode).nama + "\nSKS: " + MatakuliahRepository.getMatakuliahByKode(kode).sks);
                                break;
                            case 3:
                                sc.nextLine();
                                System.out.print("Masukkan kode: ");
                                kode = sc.nextLine();
                                MatakuliahRepository.deleteMatakuliah(kode);
                                break;
                            case 4:
                                sc.nextLine();
                                System.out.print("Masukkan kode Jurusan: ");
                                String kodeJurusan = sc.nextLine();
                                System.out.print("Masukkan kode matakuliah: ");
                                kode = sc.nextLine();
                                MatakuliahRepository.updateMatakuliah(kodeJurusan, kode);
                                break;
                            case 5:
                                List<Matakuliah> allMatkul = MatakuliahRepository.getAllMatakuliah();
                                System.out.println("Daftar Matakuliah: ");
                                for (Matakuliah mk : allMatkul) {
                                    System.out.println(mk.kode + " - " + mk.nama + " - " + mk.sks + " sks");
                                }
                                break;

                            default:
                                break;
                        }
                    }
                
                    break;
                default:
                    break;
            }
        }
        sc.close();
    }

}
